name: exporter

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.5.11
  SQLX_FEATURES: postgres,rustls

jobs:
  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  lint:
    name: lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: clippy
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          key: exporter

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: >
            sqlx-cli
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  test:
    name: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres:password@localhost:5432/swu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: taiki-e/install-action@nextest
      - uses: Swatinem/rust-cache@v1
        with:
          key: exporter

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: >
            sqlx-cli
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run tests
        run: |
          cd apps/exporter
          cargo nextest run

  build:
    name: build
    runs-on: ubuntu-latest
    needs:
      - fmt
      - lint
      - test
    environment: production
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Exporter Google Sheet Credentials
        env:
          EXPORTER_SHEETS_CREDENTIALS: ${{secrets.EXPORTER_SHEETS_CREDENTIALS}}
        run: |
          mkdir credentials
          echo $EXPORTER_SHEETS_CREDENTIALS > credentials/exporter.json

      - name: Login
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ secrets.GCP_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_IAM_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          install_components: "beta"

      - name: Use gcloud CLI
        run: gcloud info

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Generate Image Tag
        id: tag
        run: echo "::set-output name=sha::sha-${GITHUB_SHA::7}"

      - name: Docker Image Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.CLOUD_RUN_IMAGE_EXPORTER }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Login to gcloud artifact registry
        run: |
          gcloud auth configure-docker --quiet us-central1-docker.pkg.dev

      - name: Build production image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: apps/exporter/Dockerfile
          target: runtime
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
